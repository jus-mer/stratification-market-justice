---
title: "Data preparation"
subtitle: "Changes in the Justification of Pension Inequality in Chile (2016–2023) and its Relationship to Social Class and Beliefs in Meritocracy"
author: "Andreas Laffert, Research Assistant"
date: today
lang: en
fontsize: 12pt
format:
  html:
    toc: true
    toc-location: right
    toc-depth: 2
    toc-expand: 2
    toc-title: Contents
    number-sections: true
    number-depth: 3
    theme:
      - cosmo
      - edumer_html.scss
    code-link: true
    title-block-banner: true
  pdf:
    number-sections: true
    number-depth: 3
editor_options: 
  chunk_output_type: console
---

# Presentation

This is the data preparation code for the paper "Changes in the Justification of Pension Inequality in Chile (2016–2023) and its Relationship to Social Class and Beliefs in Meritocracy". The prepared dataset is `ELSOC_Long_2016_2023_1.00.RData`.

```{r}
#| label: set
#| echo: false
#| message: false
#| warning: false

library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)

table_format <- if(is_html_output()) {
  "html"
} else if(is_latex_output()) {
  "latex"
}
table_format2 <- if(is_html_output()) {
  T
} else if(is_latex_output()) {
  F
}

options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
```


# Libraries

```{r}
#| label: packages
#| include: true

if (! require("pacman")) install.packages("pacman")

pacman::p_load(tidyverse,
               car,
               sjmisc, 
               here,
               sjlabelled,
               SciViews,
               naniar,
               readxl,
               sjPlot)


options(scipen=999)
rm(list = ls())
```

# Data

```{r}
#| label: data
#| echo: true
#| output: false

load(url("https://dataverse.harvard.edu/api/access/datafile/10797987"))

glimpse(elsoc_long_2016_2023)

```

# Processing


```{r}

elsoc_long_2016_2023[elsoc_long_2016_2023 ==-999] <- NA
elsoc_long_2016_2023[elsoc_long_2016_2023 ==-888] <- NA
elsoc_long_2016_2023[elsoc_long_2016_2023 ==-777] <- NA
elsoc_long_2016_2023[elsoc_long_2016_2023 ==-666] <- NA

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>% 
  mutate(just_pension = d02_01, 
         merit_effort = c18_09,
         merit_talent = c18_10, 
         age = m0_edad, m01, 
         sex = m0_sexo, 
         ideo = c15) %>% 
  as_tibble() %>% 
  sjlabelled::drop_labels(., drop.na = FALSE)
```


```{r}
# Market Justice Preferences

frq(elsoc_long_2016_2023$just_pension)

elsoc_long_2016_2023$just_pension <- car::recode(elsoc_long_2016_2023$just_pension, 
recodes = c("1='Strongly disagree'; 2='Disagree'; 3='Neither agree nor disagree'; 4='Agree'; 5='Strongly agree'"), 
levels = c("Strongly disagree", "Disagree", "Neither agree nor disagree", "Agree", "Strongly agree"),
as.factor = T)
                                                 
elsoc_long_2016_2023$just_pension <- sjlabelled::set_label(elsoc_long_2016_2023$just_pension, 
                        label = "Pension distributive justice")
```


```{r}
# Social class scheme EOW

frq(elsoc_long_2016_2023$m07)
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>% 
  mutate(rel_empleo = factor(m07,
                             levels = 1:7,
                             labels= c("Empleado u obrero en empresa privada",
                                       "Empleado u obrero del sector público",
                                       "Miembro de las Fuerzas Armadas y de Orden",
                                       "Patrón/a o empleador/a",
                                       "Trabaja solo, no tiene empleados",
                                       "Familiar no remunerado",
                                       "Servicio doméstico"
                                       )))


# Definir los niveles y etiquetas originales
niveles_rel_empleo <- 1:7
etiquetas_rel_empleo <- c("Empleado u obrero en empresa privada",
                          "Empleado u obrero del sector público",
                          "Miembro de las Fuerzas Armadas y de Orden",
                          "Patrón/a o empleador/a",
                          "Trabaja solo, no tiene empleados",
                          "Familiar no remunerado",
                          "Servicio doméstico")

# Crear columna desplazada y rellenar valores NA
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  group_by(idencuesta) %>%                                              # Agrupa por id para trabajar en cada individuo
  mutate(rel_empleo_lagged = lag(as.character(rel_empleo), n = 1)) %>%  # Desplaza rel_empleo a la siguiente ola
  ungroup() %>%
  mutate(rel_empleo = if_else(!is.na(rel_empleo), 
                              as.character(rel_empleo), 
                              rel_empleo_lagged),
         rel_empleo = factor(rel_empleo,                                # Convertir de nuevo a factor
                             levels = etiquetas_rel_empleo)) %>%
  select(-rel_empleo_lagged)                                            # Elimina la columna temporal

# Tabla de frecuencias y porcentajes
sjt.xtab(elsoc_long_2016_2023$rel_empleo,elsoc_long_2016_2023$ola,
         show.col.prc=TRUE,
         var.labels=c("Relación de empleo","Ola"),
         show.summary=FALSE,         title="Frecuencias y porcentajes de Relación de Empleo, por ola")

elsoc_long_2016_2023$rel_empleo2 <- car::recode(elsoc_long_2016_2023$rel_empleo,
                                recodes=c("'Patrón/a o empleador/a'='Empleador';
                                           'Trabaja solo, no tiene empleados'='Autoempleado';
                                           'Empleado u obrero en empresa privada'='Asalariado';
                                           'Empleado u obrero del sector público'='Asalariado';
                                           'Miembro de las Fuerzas Armadas y de Orden'='Asalariado';
                                           'Familiar no remunerado'='Asalariado';
                                           'Servicio doméstico'='Asalariado'"),
                                as.factor=TRUE, # convertir a factor
                                levels=c("Empleador",
                                         "Autoempleado",
                                         "Asalariado")) # ordenar niveles

# Tabla de frecuencias y porcentajes
sjt.xtab(elsoc_long_2016_2023$rel_empleo2,elsoc_long_2016_2023$ola,
         show.col.prc=TRUE,
         var.labels=c("Relación de empleo 2","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Relación de Empleo 2, por ola")

# Carga bbdd con comparacion 88 y 08
isco08_88 <- read_excel(here::here("input/data/original/isco08-88.xls"))

isco08_88 <- isco08_88 %>%
  rename(isco08=`ISCO 08 Code`,isco88=`ISCO-88 code`)

# Exploración
valores_repetidos <- table(isco08_88$isco88) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
valores_repetidos <- table(isco08_88$isco08) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]

# CIUO - ISCO: Recodificación 88->08 4 digitos en datos elsoc
indices <- match(elsoc_long_2016_2023$ciuo88_m03,isco08_88$isco88)
elsoc_long_2016_2023$ciuo08_rec <- isco08_88$isco08[indices]
elsoc_long_2016_2023$ciuo08_rec <- as.numeric(elsoc_long_2016_2023$ciuo08_rec) # es solo la recodificación de las que eran 88 en data, es decir, año 2016

# Creación variable isco08 con ciuo08_m03 y ciuo08_rec (ex ciuo88_m03) 4 digitos
elsoc_long_2016_2023$isco08 <- ifelse(!is.na(elsoc_long_2016_2023$ciuo08_rec),elsoc_long_2016_2023$ciuo08_rec,elsoc_long_2016_2023$ciuo08_m03) # es la unión en una variable de todo en 08

# Crear una columna con la variable "isco08" adelantada una ola
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(isco08_lagged=lag(isco08,n=1)) %>%  # Desplaza isco08 a la siguiente ola
  ungroup()

# Rellenar los valores NA en la variable original
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  mutate(isco08=ifelse(!is.na(isco08),isco08,isco08_lagged)) %>%  # Si isco08 es NA, sustituir con el valor de la ola anterior 
  select(-isco08_lagged)                 # Elimina la columna temporal


# CIUO - ISCO: creación de variables con 1 dígito
elsoc_long_2016_2023$isco08_1d <- as.character(elsoc_long_2016_2023$isco08)
elsoc_long_2016_2023$isco08_1d <- substr(elsoc_long_2016_2023$isco08_1d,1,1)
elsoc_long_2016_2023$isco08_1d <- as.numeric(elsoc_long_2016_2023$isco08_1d)

# CIUO - ISCO: creación de variables con 2 dígitos
elsoc_long_2016_2023$isco08_2d <- as.character(elsoc_long_2016_2023$isco08)
elsoc_long_2016_2023$isco08_2d <- substr(elsoc_long_2016_2023$isco08_2d,1,2)
elsoc_long_2016_2023$isco08_2d <- as.numeric(elsoc_long_2016_2023$isco08_2d)

# Tabla de frecuencias y porcentajes 1 dígito
sjt.xtab(elsoc_long_2016_2023$isco08_1d,elsoc_long_2016_2023$ola,
         show.col.prc=TRUE, 
         var.labels=c("CIUO08","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Ocupación con 1 dígito, por ola")


# Creación variable Nivel de cualificación
elsoc_long_2016_2023 <- mutate(elsoc_long_2016_2023,
               cualificacion=factor(case_when(isco08_2d<=34&m01>=9~"Experts",
                                              isco08_2d<=34&m01<9~"Skilled",
                                              isco08_2d%in%c(35,41:44,53)~"Skilled",
                                              isco08_2d%in%c(51,54,61,62,71:75,81)&m01>5~"Skilled",
                                              isco08_2d%in%c(51,54,61,62,71:75,81)&m01<=5~"Unskilled",
                                              isco08_2d%in%c(52,63,82,83,91:99)~"Unskilled"),
                                    levels=c("Experts","Skilled","Unskilled")))

# Tabla de frecuencias y porcentajes 
sjt.xtab(elsoc_long_2016_2023$cualificacion,elsoc_long_2016_2023$ola,
         show.col.prc=TRUE, 
         var.labels=c("Nivel de cualificación","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes del Nivel de Cualificación, por ola")


# Crear variable supervisa==1, no supervisa==0
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  mutate(supervisa=case_when(m06==0~0,
                             m06>=1~1))


# Crear una columna con la variable "m06" adelantada una ola
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(m06_lagged=lag(m06,n=1)) %>%  # Desplaza "m06" a la siguiente ola
  ungroup() 

# Rellenar los valores NA en la variable original
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  mutate(m06_full=ifelse(!is.na(m06),m06,m06_lagged)) %>%  # Si m06 es NA, sustituir con el valor de la ola anterior
  select(-m06_lagged) 

# Crear variable supervisa==1, no supervisa==0
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  mutate(supervisa=case_when(m06_full==0~0,
                             m06_full>=1~1))

# Tabla de frecuencias y porcentajes 
sjt.xtab(elsoc_long_2016_2023$supervisa,elsoc_long_2016_2023$ola,
         show.col.prc=TRUE, 
         var.labels=c("Supervisa","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de variable Supervisa, por ola")



# Creación de variable posición de clase
elsoc_long_2016_2023 <- mutate(elsoc_long_2016_2023,
               class1=case_when(
                 rel_empleo2=="Empleador"~"Petit bourgeoisie",
                 rel_empleo2=="Autoempleado"&m01>=9~"Petit bourgeoisie",
                 rel_empleo2=="Autoempleado"&m01<9~"Informal",
                 rel_empleo2=="Asalariado"&cualificacion=="Experts"&supervisa==1~"Expert managers",
                 rel_empleo2=="Asalariado"&cualificacion=="Experts"&supervisa==0~"Experts",
                 rel_empleo2=="Asalariado"&cualificacion=="Skilled"&supervisa==1~"Supervisors",
                 rel_empleo2=="Asalariado"&cualificacion=="Unskilled"&supervisa==1~"Supervisors",
                 rel_empleo2=="Asalariado"&cualificacion=="Skilled"&supervisa==0~"Workers",
                 rel_empleo2=="Asalariado"&cualificacion=="Unskilled"&supervisa==0~"Workers"))

elsoc_long_2016_2023$class1 <- factor(elsoc_long_2016_2023$class1,
                      levels=c("Petit bourgeoisie",
                               "Informal",
                               "Expert managers",
                               "Experts",
                               "Supervisors",
                               "Workers"))

# Tabla de frecuencias y porcentajes 
sjt.xtab(elsoc_long_2016_2023$class1, elsoc_long_2016_2023$ola,
         show.col.prc = TRUE, 
         var.labels = c("Posición de clase 1","Ola"),
         show.summary = FALSE,
         title = "Frecuencias y porcentajes de la Posición de clase 1, por ola")
```


```{r}
# Meritocracy

frq(elsoc_long_2016_2023$merit_effort)
frq(elsoc_long_2016_2023$merit_talent)

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>% 
  mutate(
    across(
      .cols = c(merit_effort, merit_talent),
      .fns = ~ car::recode(., recodes = c("1='Strongly disagree'; 2='Disagree';
                                          3='Neither agree nor disagree'; 4='Agree';
                                          5='Strongly agree'"), 
                           levels = c("Strongly disagree", "Disagree", "Neither agree nor disagree", "Agree", "Strongly agree"),
                           as.factor = T)
    )
  )


elsoc_long_2016_2023$merit_effort <- sjlabelled::set_label(elsoc_long_2016_2023$merit_effort, 
                        label = "People are rewarded for their efforts")

elsoc_long_2016_2023$merit_talent <- sjlabelled::set_label(elsoc_long_2016_2023$merit_talent, 
                        label = "People are rewarded for their intelligence")


```


```{r}
# Controls

# sex
elsoc_long_2016_2023$sex <- car::recode(elsoc_long_2016_2023$sex, 
                           recodes = c("1='Male'; 2='Female'"), 
                           levels = c("Male", "Female"),
                           as.factor = T)

elsoc_long_2016_2023$sex <- sjlabelled::set_label(elsoc_long_2016_2023$sex, 
                        label = "Gender")

# age
frq(elsoc_long_2016_2023$age)

elsoc_long_2016_2023$age <- 
  factor(car::recode(elsoc_long_2016_2023$age, 
                     "18:29=1;30:49=2;50:64=3;65:150=4"),
         labels = c('18-29', '30-49', '50-64', '65 or more'))
elsoc_long_2016_2023$age <-
  sjlabelled::set_label(elsoc_long_2016_2023$age, 
                        label = c("Age groups")) 


# political indentification

frq(elsoc_long_2016_2023$ideo)

elsoc_long_2016_2023$ideo<-
factor(
  car::recode(
    elsoc_long_2016_2023$ideo,
    "c(11,12,-888,-999)='Does not identify';c(0,1,2,3,4)='Left';
     c(5)='Center';c(6,7,8,9,10)='Right'"
  ),
  levels = c('Left', 'Center', 'Right', 'Does not identify')
)

elsoc_long_2016_2023$ideo<- factor(elsoc_long_2016_2023$ideo,levels = levels(elsoc_long_2016_2023$ideo))

elsoc_long_2016_2023$ideo <- 
sjlabelled::set_label(x = elsoc_long_2016_2023$ideo, 
                      label = "Political identification") 

frq(elsoc_long_2016_2023$ideo)

```

```{r}
# Socioeconomic_________________________________________________________________

# Education_______________________________________
elsoc_long_2016_2023$educ <- 
  car::recode(elsoc_long_2016_2023$m01,
              "c(1,2,3,4,5,6,7)=1;c(8,9,10)=2; c(-888,-999)=NA")
elsoc_long_2016_2023$educ <-
  factor(elsoc_long_2016_2023$educ,
         labels = c("Less than Universitary","Universitary"))

#reverse education, reference level is the highest level
#elsoc_long_2016_2023$educ <- forcats::fct_rev(elsoc_long_2016_2023$educ)

elsoc_long_2016_2023$educ <- 
sjlabelled::set_label(x = elsoc_long_2016_2023$educ,
                      label = "Education")
sjmisc::frq(elsoc_long_2016_2023$educ)

#Recoding of education to years based on casen 2017.
elsoc_long_2016_2023$educyear<- as.numeric(
  car::recode(elsoc_long_2016_2023$m01, 
              "1=0;2=4.3;3=7.5;4=9.8;5=12.02;6=13.9;
               7=14.8;8=14.9;9=16.9;10=19.07;c(-888,-999)=NA", 
              as.numeric = T))

elsoc_long_2016_2023$educyear <- 
sjlabelled::set_label(x = elsoc_long_2016_2023$educyear,
                      label = "Education in years")

class(elsoc_long_2016_2023$educyear)
sjmisc::frq(elsoc_long_2016_2023$educyear)
```

```{r}
# Reshape long to wide

df_study1_long <- elsoc_long_2016_2023 %>% 
  select(idencuesta,
         ola,
         muestra,
         ponderador_long_total, 
         segmento, 
         estrato,
         just_pension,
         class1,
         merit_effort,
         merit_talent,
         educ,
         educyear,
         sex,
         age,
         ideo)

df_study1_wide <- df_study1_long %>% 
  tidyr::pivot_wider(id_cols = c("idencuesta","muestra"),
                     names_from = "ola",
                     values_from = names(select(df_study1_long,ponderador_long_total,segmento, estrato, just_pension:ideo)))

# fix data to w01 values
df_study1_wide$class1_2 <-df_study1_wide$class1_1 #class
df_study1_wide$class1_3 <-df_study1_wide$class1_1
df_study1_wide$class1_4 <-df_study1_wide$class1_1
df_study1_wide$class1_5 <-df_study1_wide$class1_1
df_study1_wide$class1_6 <-df_study1_wide$class1_1
df_study1_wide$class1_7 <-df_study1_wide$class1_1


df_study1_wide$age_2 <-df_study1_wide$age_1 #age
df_study1_wide$age_3 <-df_study1_wide$age_1
df_study1_wide$age_4 <-df_study1_wide$age_1
df_study1_wide$age_5 <-df_study1_wide$age_1
df_study1_wide$age_6 <-df_study1_wide$age_1
df_study1_wide$age_7 <-df_study1_wide$age_1

df_study1_wide$sex_2 <-df_study1_wide$sex_1 #sex
df_study1_wide$sex_3 <-df_study1_wide$sex_1
df_study1_wide$sex_4 <-df_study1_wide$sex_1
df_study1_wide$sex_5 <-df_study1_wide$sex_1
df_study1_wide$sex_6 <-df_study1_wide$sex_1
df_study1_wide$sex_7 <-df_study1_wide$sex_1

df_study1_wide$educ_2 <-df_study1_wide$educ_1 #education
df_study1_wide$educ_3 <-df_study1_wide$educ_1
df_study1_wide$educ_4 <-df_study1_wide$educ_1
df_study1_wide$educ_5 <-df_study1_wide$educ_1
df_study1_wide$educ_6 <-df_study1_wide$educ_1
df_study1_wide$educ_7 <-df_study1_wide$educ_1

df_study1_wide$educyear_2 <-df_study1_wide$educyear_1 #education years
df_study1_wide$educyear_3 <-df_study1_wide$educyear_1
df_study1_wide$educyear_4 <-df_study1_wide$educyear_1
df_study1_wide$educyear_5 <-df_study1_wide$educyear_1
df_study1_wide$educyear_6 <-df_study1_wide$educyear_1
df_study1_wide$educyear_7 <-df_study1_wide$educyear_1


df_study1_wide$ideo_2 <-df_study1_wide$ideo_1 # political position
df_study1_wide$ideo_3 <-df_study1_wide$ideo_1
df_study1_wide$ideo_4 <-df_study1_wide$ideo_1
df_study1_wide$ideo_5 <-df_study1_wide$ideo_1
df_study1_wide$ideo_6 <-df_study1_wide$ideo_1
df_study1_wide$ideo_7 <-df_study1_wide$ideo_1


dim(df_study1_wide)

sjPlot::view_df(df_study1_wide,
                show.frq = T,show.values = T,show.na = T,show.prc = T, show.type = T)
```

```{r}
# reshape from long to wide
pacman::p_load(datasets,data.table)
df_study1_long <- data.table::melt.data.table(data.table::setDT(df_study1_wide),
              id.vars = c("idencuesta","muestra"),
              variable.name = c("ola"),
              measure = 
patterns("^ponderador_long_total_", "^segmento_", "^estrato_", "^just_pension_","^class1_","^merit_effort_","^merit_talent_", "^educ_","^educyear_","^sex_", "^age_", "^ideo_"),
              value.name = c("ponderador_long_total","segmento","estrato", "just_pension","class","merit_effort","merit_talent",  "educ","educyear","sex", "age", "ideo"),
              na.rm = F,value.factor = TRUE
              )
```


```{r}
names(df_study1_long) #check names of long dataset
dim(df_study1_long) #check dimensions of the dataframe
# Original dataset with 7 waves
df_study2_long <- df_study1_long

# filter the dataset for the waves 1 to 4 and 6 to 7
df_study1_long <-
df_study1_long %>% 
  filter(ola %in% c(1,2,3,4,6,7)) %>% 
  mutate(ola=factor(ola,levels = 1:7,labels = 1:7))
dim(df_study1_long) #check, now is OK

# df_study1_long <- 
# set_label(x = df_study1_long,
#           label = get_label(select(df_study1,names(df_study1_long))))
  

#______________________________________________________________________________
# obtain the idencuesta for wave 7
ids <- 
  elsoc_long_2016_2023 %>% 
  select(idencuesta,ola) %>% 
  filter(ola==7) %>% 
  sjmisc::frq(idencuesta,show.na = F) %>% as.data.frame()


# filter data by the idencuesta of t7
df_study1_long_t7 <- 
  df_study1_long %>%
  filter(idencuesta %in% ids$val)

names(df_study1_long_t7)
dim(df_study1_long_t7)
sjmisc::frq(df_study1_long_t7$ola)
```


```{r}
save(df_study1_long,file = here::here("input/data/proc/df_study1_long.RData"))
save(df_study1_long_t7,file = here::here("input/data/proc/df_study1_long_t7.RData"))
save(df_study2_long,file = here::here("input/data/proc/df_study2_long.RData"))
```

