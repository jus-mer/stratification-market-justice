---
title: "Data preparation"
subtitle: "Changes in the Justification of Pension Inequality in Chile (2016–2023) and its Relationship to Social Class and Beliefs in Meritocracy"
author: "Andreas Laffert, Research Assistant"
date: today
lang: en
fontsize: 12pt
format:
  html:
    toc: true
    toc-location: right
    toc-depth: 2
    toc-expand: 2
    toc-title: Contents
    number-sections: true
    number-depth: 3
    theme:
      - cosmo
      - edumer_html.scss
    code-link: true
    title-block-banner: true
  pdf:
    number-sections: true
    number-depth: 3
editor_options: 
  chunk_output_type: console
---

# Presentation

This is the data preparation code for the paper "Changes in the Justification of Pension Inequality in Chile (2016–2023) and its Relationship to Social Class and Beliefs in Meritocracy". The prepared dataset is `ELSOC_Long_2016_2023_1.00.RData`.

```{r}
#| label: set
#| echo: false
#| message: false
#| warning: false

library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)

table_format <- if(is_html_output()) {
  "html"
} else if(is_latex_output()) {
  "latex"
}
table_format2 <- if(is_html_output()) {
  T
} else if(is_latex_output()) {
  F
}

options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
```


# Libraries

```{r}
#| label: packages
#| include: true

if (! require("pacman")) install.packages("pacman")

pacman::p_load(tidyverse,
               car,
               sjmisc, 
               here,
               sjlabelled,
               SciViews,
               naniar,
               readxl,
               sjPlot)


options(scipen=999)
rm(list = ls())
```

# Data

```{r}
#| label: data
#| echo: true
#| output: false

load(url("https://dataverse.harvard.edu/api/access/datafile/10797987"))

glimpse(elsoc_long_2016_2023)

```

# Processing


```{r}

elsoc_long_2016_2023[elsoc_long_2016_2023 ==-999] <- NA
elsoc_long_2016_2023[elsoc_long_2016_2023 ==-888] <- NA
elsoc_long_2016_2023[elsoc_long_2016_2023 ==-777] <- NA
elsoc_long_2016_2023[elsoc_long_2016_2023 ==-666] <- NA

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>% 
  mutate(just_pension = d02_01, 
         merit_effort = c18_09,
         merit_talent = c18_10, 
         age = m0_edad, m01, 
         sex = m0_sexo, 
         ideo = c15) %>% 
  as_tibble() %>% 
  sjlabelled::drop_labels(., drop.na = FALSE)
```


```{r}
# Market Justice Preferences

frq(elsoc_long_2016_2023$just_pension)

elsoc_long_2016_2023$just_pension <- car::recode(elsoc_long_2016_2023$just_pension, 
recodes = c("1='Strongly disagree'; 2='Disagree'; 3='Neither agree nor disagree'; 4='Agree'; 5='Strongly agree'"), 
levels = c("Strongly disagree", "Disagree", "Neither agree nor disagree", "Agree", "Strongly agree"),
as.factor = T)
                                                 
elsoc_long_2016_2023$just_pension <- sjlabelled::set_label(elsoc_long_2016_2023$just_pension, 
                        label = "Pension distributive justice")
```


```{r}
# Social class scheme EGP

# isco 

frq(elsoc_long_2016_2023$ciuo88_m03)

elsoc_long_2016_2023 %>%
  group_by(ola) %>%
  summarise(
    solo_NA = all(is.na(ciuo88_m03))
  ) # only wave 2016

frq(elsoc_long_2016_2023$ciuo08_m03)

elsoc_long_2016_2023 %>%
  group_by(ola) %>%
  summarise(
    solo_NA = all(is.na(ciuo08_m03))
  ) # only wave 2018, 2021 and 2023

elsoc_long_2016_2023$isco88 <- NA
elsoc_long_2016_2023$isco88[elsoc_long_2016_2023$ola %in% c(1)] <- elsoc_long_2016_2023$ciuo88_m03[elsoc_long_2016_2023$ola %in% c(1)]

elsoc_long_2016_2023$isco88[elsoc_long_2016_2023$ola %in% c(3,5,7)] <- occupar::isco08to88(elsoc_long_2016_2023$ciuo08_m03[elsoc_long_2016_2023$ola %in% c(3,5,7)]
)

elsoc_long_2016_2023 %>%
  group_by(ola) %>%
  summarise(
    solo_NA = all(is.na(isco88))
  )


# Crear una columna con la variable "isco08" adelantada una ola
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(isco88_lagged=lag(isco88,n=1)) %>%  # Desplaza isco08 a la siguiente ola
  ungroup()

# Rellenar los valores NA en la variable original
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  mutate(isco88=ifelse(!is.na(isco88),isco88,isco88_lagged)) %>%  # Si isco08 es NA, sustituir con el valor de la ola anterior 
  select(-isco88_lagged)                 # Elimina la columna temporal

elsoc_long_2016_2023 %>%
  group_by(ola) %>%
  summarise(
    solo_NA = all(is.na(isco88))
  )

# rel empleo
frq(elsoc_long_2016_2023$m07)

labs_sj <- c(
  `1` = "Empleado u obrero en empresa privada",
  `2` = "Empleado u obrero del sector público",
  `3` = "Miembro de las Fuerzas Armadas y de Orden",
  `4` = "Patrón/a o empleador/a",
  `5` = "Trabaja solo, no tiene empleados",
  `6` = "Familiar no remunerado",
  `7` = "Servicio doméstico"
)

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  mutate(m07 = suppressWarnings(as.integer(m07)),
         m07 = if_else(m07 %in% c(1,2,4,5,7), m07, NA_integer_)) %>%
  group_by(idencuesta) %>%
  arrange(idencuesta, ola, .by_group = TRUE) %>%
  mutate(rel_empleo = coalesce(m07, lag(m07))) %>%
  ungroup() %>%
  mutate(
    rel_empleo = set_labels(rel_empleo, labels = labs_sj),
    rel_empleo = set_label(rel_empleo, label = "Relación de empleo (1–7)")
  )

frq(elsoc_long_2016_2023$rel_empleo)

sjt.xtab(elsoc_long_2016_2023$rel_empleo,elsoc_long_2016_2023$ola,
         show.col.prc=TRUE,
         var.labels=c("Relación de empleo","Ola"),
         show.summary=FALSE,         title=NULL)

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>% 
  rowwise() %>% 
  mutate(selfemp_egp = case_when(rel_empleo %in% c(4:5) ~ 1,
                                 rel_empleo %in% c(1,2,7) ~ 0,
                                 TRUE ~ NA)) %>% 
  ungroup()

frq(elsoc_long_2016_2023$selfemp_egp)

# n_employed

frq(elsoc_long_2016_2023$m05)

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>% 
  mutate(m05_rec = case_when(m05 == 1 ~ 1,
                           m05 == 2 ~ 4,
                           m05 == 3 ~ 9,
                           m05 == 4 ~ 49,
                           m05 == 5 ~ 199,
                           m05 == 6 ~ 201,
                           TRUE ~ NA_real_))

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>% 
  mutate(nemploy_egp = if_else(selfemp_egp == 1 & m05_rec > 1, m05_rec, 0))

frq(elsoc_long_2016_2023$nemploy_egp)

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(nemploy_egp_lagged=lag(nemploy_egp,n=1)) %>%  # Desplaza isco08 a la siguiente ola
  ungroup()

# Rellenar los valores NA en la variable original
elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>%
  mutate(nemploy_egp=ifelse(!is.na(nemploy_egp),nemploy_egp,nemploy_egp_lagged)) %>%  # Si isco08 es NA, sustituir con el valor de la ola anterior 
  select(-nemploy_egp_lagged)                 # Elimina la columna temporal


sjt.xtab(elsoc_long_2016_2023$nemploy_egp,elsoc_long_2016_2023$ola,
         show.col.prc=TRUE,
         var.labels=c("N employees","Ola"),
         show.summary=FALSE,         title=NULL)

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>% 
  mutate(egp = occupar::isco88toEGP(isco88 = isco88, 
                                    n.employees = nemploy_egp, 
                                    self.employed = selfemp_egp,
                                    n.classes = 7))

frq(elsoc_long_2016_2023$egp)

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>% 
  mutate(egp = factor(str_squish(as.character(egp))),
         egp3 = case_when(egp %in% c("I Service class I", 
                                    "II Service class II") ~ "Service class (I+II)",
                         egp %in% c("III Routine non-manual",
                                    "IV Self-employed") ~ "Intermediate class (III+IV)",
                         egp %in% c("V Manual supervisors/Lower grade technicians",
                                    "VI Skilled workers",
                                    "VII Unskilled workers/Farm labours") ~ "Working class (V+VI+VII)"),
         egp3 = factor(egp3, levels = c("Service class (I+II)",
                                      "Intermediate class (III+IV)",
                                      "Working class (V+VI+VII)")))


frq(elsoc_long_2016_2023$egp3)

sjt.xtab(elsoc_long_2016_2023$egp3,elsoc_long_2016_2023$ola,
         show.col.prc=TRUE,
         var.labels=c("EGP","Ola"),
         show.summary=FALSE,         title=NULL)

```


```{r}
# Meritocracy

frq(elsoc_long_2016_2023$merit_effort)
frq(elsoc_long_2016_2023$merit_talent)

elsoc_long_2016_2023 <- elsoc_long_2016_2023 %>% 
  mutate(
    across(
      .cols = c(merit_effort, merit_talent),
      .fns = ~ car::recode(., recodes = c("1='Strongly disagree'; 2='Disagree';
                                          3='Neither agree nor disagree'; 4='Agree';
                                          5='Strongly agree'"), 
                           levels = c("Strongly disagree", "Disagree", "Neither agree nor disagree", "Agree", "Strongly agree"),
                           as.factor = T)
    )
  )


elsoc_long_2016_2023$merit_effort <- sjlabelled::set_label(elsoc_long_2016_2023$merit_effort, 
                        label = "People are rewarded for their efforts")

elsoc_long_2016_2023$merit_talent <- sjlabelled::set_label(elsoc_long_2016_2023$merit_talent, 
                        label = "People are rewarded for their intelligence")


```


```{r}
# Controls

# sex
elsoc_long_2016_2023$sex <- car::recode(elsoc_long_2016_2023$sex, 
                           recodes = c("1='Male'; 2='Female'"), 
                           levels = c("Male", "Female"),
                           as.factor = T)

elsoc_long_2016_2023$sex <- sjlabelled::set_label(elsoc_long_2016_2023$sex, 
                        label = "Gender")

# age
frq(elsoc_long_2016_2023$age)

elsoc_long_2016_2023$age <- 
  factor(car::recode(elsoc_long_2016_2023$age, 
                     "18:29=1;30:49=2;50:64=3;65:150=4"),
         labels = c('18-29', '30-49', '50-64', '65 or more'))
elsoc_long_2016_2023$age <-
  sjlabelled::set_label(elsoc_long_2016_2023$age, 
                        label = c("Age groups")) 


# political indentification

frq(elsoc_long_2016_2023$ideo)

elsoc_long_2016_2023$ideo<-
factor(
  car::recode(
    elsoc_long_2016_2023$ideo,
    "c(11,12,-888,-999)='Does not identify';c(0,1,2,3,4)='Left';
     c(5)='Center';c(6,7,8,9,10)='Right'"
  ),
  levels = c('Left', 'Center', 'Right', 'Does not identify')
)

elsoc_long_2016_2023$ideo<- factor(elsoc_long_2016_2023$ideo,levels = levels(elsoc_long_2016_2023$ideo))

elsoc_long_2016_2023$ideo <- 
sjlabelled::set_label(x = elsoc_long_2016_2023$ideo, 
                      label = "Political identification") 

frq(elsoc_long_2016_2023$ideo)

```

```{r}
# Socioeconomic_________________________________________________________________

# Education_______________________________________
elsoc_long_2016_2023$educ <- 
  car::recode(elsoc_long_2016_2023$m01,
              "c(1,2,3,4,5,6,7)=1;c(8,9,10)=2; c(-888,-999)=NA")
elsoc_long_2016_2023$educ <-
  factor(elsoc_long_2016_2023$educ,
         labels = c("Less than Universitary","Universitary"))

#reverse education, reference level is the highest level
#elsoc_long_2016_2023$educ <- forcats::fct_rev(elsoc_long_2016_2023$educ)

elsoc_long_2016_2023$educ <- 
sjlabelled::set_label(x = elsoc_long_2016_2023$educ,
                      label = "Education")
sjmisc::frq(elsoc_long_2016_2023$educ)

#Recoding of education to years based on casen 2017.
elsoc_long_2016_2023$educyear<- as.numeric(
  car::recode(elsoc_long_2016_2023$m01, 
              "1=0;2=4.3;3=7.5;4=9.8;5=12.02;6=13.9;
               7=14.8;8=14.9;9=16.9;10=19.07;c(-888,-999)=NA", 
              as.numeric = T))

elsoc_long_2016_2023$educyear <- 
sjlabelled::set_label(x = elsoc_long_2016_2023$educyear,
                      label = "Education in years")

class(elsoc_long_2016_2023$educyear)
sjmisc::frq(elsoc_long_2016_2023$educyear)
```

```{r}
# Reshape long to wide

df_study1_long <- elsoc_long_2016_2023 %>% 
  select(idencuesta,
         ola,
         muestra,
         ponderador_long_total, 
         segmento, 
         estrato,
         just_pension,
         egp = egp3,
         merit_effort,
         merit_talent,
         educ,
         educyear,
         sex,
         age,
         ideo)

df_study1_wide <- df_study1_long %>% 
  tidyr::pivot_wider(id_cols = c("idencuesta","muestra"),
                     names_from = "ola",
                     values_from = names(select(df_study1_long,ponderador_long_total,segmento, estrato, just_pension:ideo)))

# fix data to w01 values
df_study1_wide$egp_2 <-df_study1_wide$egp_1 #class
df_study1_wide$egp_3 <-df_study1_wide$egp_1
df_study1_wide$egp_4 <-df_study1_wide$egp_1
df_study1_wide$egp_5 <-df_study1_wide$egp_1
df_study1_wide$egp_6 <-df_study1_wide$egp_1
df_study1_wide$egp_7 <-df_study1_wide$egp_1


df_study1_wide$age_2 <-df_study1_wide$age_1 #age
df_study1_wide$age_3 <-df_study1_wide$age_1
df_study1_wide$age_4 <-df_study1_wide$age_1
df_study1_wide$age_5 <-df_study1_wide$age_1
df_study1_wide$age_6 <-df_study1_wide$age_1
df_study1_wide$age_7 <-df_study1_wide$age_1

df_study1_wide$sex_2 <-df_study1_wide$sex_1 #sex
df_study1_wide$sex_3 <-df_study1_wide$sex_1
df_study1_wide$sex_4 <-df_study1_wide$sex_1
df_study1_wide$sex_5 <-df_study1_wide$sex_1
df_study1_wide$sex_6 <-df_study1_wide$sex_1
df_study1_wide$sex_7 <-df_study1_wide$sex_1

df_study1_wide$educ_2 <-df_study1_wide$educ_1 #education
df_study1_wide$educ_3 <-df_study1_wide$educ_1
df_study1_wide$educ_4 <-df_study1_wide$educ_1
df_study1_wide$educ_5 <-df_study1_wide$educ_1
df_study1_wide$educ_6 <-df_study1_wide$educ_1
df_study1_wide$educ_7 <-df_study1_wide$educ_1

df_study1_wide$educyear_2 <-df_study1_wide$educyear_1 #education years
df_study1_wide$educyear_3 <-df_study1_wide$educyear_1
df_study1_wide$educyear_4 <-df_study1_wide$educyear_1
df_study1_wide$educyear_5 <-df_study1_wide$educyear_1
df_study1_wide$educyear_6 <-df_study1_wide$educyear_1
df_study1_wide$educyear_7 <-df_study1_wide$educyear_1


df_study1_wide$ideo_2 <-df_study1_wide$ideo_1 # political position
df_study1_wide$ideo_3 <-df_study1_wide$ideo_1
df_study1_wide$ideo_4 <-df_study1_wide$ideo_1
df_study1_wide$ideo_5 <-df_study1_wide$ideo_1
df_study1_wide$ideo_6 <-df_study1_wide$ideo_1
df_study1_wide$ideo_7 <-df_study1_wide$ideo_1


dim(df_study1_wide)

sjPlot::view_df(df_study1_wide,
                show.frq = T,show.values = T,show.na = T,show.prc = T, show.type = T)
```

```{r}
# reshape from long to wide
pacman::p_load(datasets,data.table)
df_study1_long <- data.table::melt.data.table(data.table::setDT(df_study1_wide),
              id.vars = c("idencuesta","muestra"),
              variable.name = c("ola"),
              measure = 
patterns("^ponderador_long_total_", "^segmento_", "^estrato_", "^just_pension_","^egp_","^merit_effort_","^merit_talent_", "^educ_","^educyear_","^sex_", "^age_", "^ideo_"),
              value.name = c("ponderador_long_total","segmento","estrato", "just_pension","egp","merit_effort","merit_talent",  "educ","educyear","sex", "age", "ideo"),
              na.rm = F,value.factor = TRUE
              )
```


```{r}
names(df_study1_long) #check names of long dataset
dim(df_study1_long) #check dimensions of the dataframe
# Original dataset with 7 waves
df_study2_long <- df_study1_long

# filter the dataset for the waves 1 to 4 and 6 to 7
df_study1_long <-
df_study1_long %>% 
  filter(ola %in% c(1,2,3,4,6,7)) %>% 
  mutate(ola=factor(ola,levels = 1:7,labels = 1:7))
dim(df_study1_long) #check, now is OK

# df_study1_long <- 
# set_label(x = df_study1_long,
#           label = get_label(select(df_study1,names(df_study1_long))))
  

#______________________________________________________________________________
# obtain the idencuesta for wave 7
ids <- 
  elsoc_long_2016_2023 %>% 
  select(idencuesta,ola) %>% 
  filter(ola==7) %>% 
  sjmisc::frq(idencuesta,show.na = F) %>% as.data.frame()


# filter data by the idencuesta of t7
df_study1_long_t7 <- 
  df_study1_long %>%
  filter(idencuesta %in% ids$val)

names(df_study1_long_t7)
dim(df_study1_long_t7)
sjmisc::frq(df_study1_long_t7$ola)
```


```{r}
save(df_study1_long,file = here::here("input/data/proc/df_study1_long.RData"))
save(df_study1_long_t7,file = here::here("input/data/proc/df_study1_long_t7.RData"))
save(df_study2_long,file = here::here("input/data/proc/df_study2_long.RData"))
```

